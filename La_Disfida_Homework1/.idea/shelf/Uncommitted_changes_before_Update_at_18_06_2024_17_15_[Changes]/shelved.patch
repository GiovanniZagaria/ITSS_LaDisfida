Index: src/main/java/Search.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>public class Search {\r\n    public boolean binarySearchInRange(int[] array, int value, int left, int right) {\r\n        if (array == null || left < 0 || right >= array.length || left > right) {\r\n            throw new IllegalArgumentException(\"Invalid input parameters.\");\r\n        }\r\n\r\n        // Verify if the array is sorted in the specified range\r\n        for (int i = left; i < right; i++) {\r\n            if (array[i] > array[i + 1]) {\r\n                throw new IllegalArgumentException(\"Array is not sorted in the specified range.\");\r\n            }\r\n        }\r\n\r\n        // Perform non-recursive binary search\r\n        while (left <= right) {\r\n            int mid = left + (right - left) / 2;\r\n\r\n            if (array[mid] == value) {\r\n                return true;\r\n            }\r\n            if (array[mid] < value) {\r\n                left = mid + 1;\r\n            } else {\r\n                right = mid - 1;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/Search.java b/src/main/java/Search.java
--- a/src/main/java/Search.java	(revision b15b3e522702044caaaa3af173bd7d1545911fdb)
+++ b/src/main/java/Search.java	(date 1718723518219)
@@ -1,6 +1,6 @@
 public class Search {
     public boolean binarySearchInRange(int[] array, int value, int left, int right) {
-        if (array == null || left < 0 || right >= array.length || left > right) {
+        if (array == null || array.length == 0 || left < 0 || right >= array.length || left > right) {
             throw new IllegalArgumentException("Invalid input parameters.");
         }
 
@@ -13,6 +13,11 @@
 
         // Perform non-recursive binary search
         while (left <= right) {
+
+            if(array[left] == value || array[right] == value) {
+                return true;
+            }
+
             int mid = left + (right - left) / 2;
 
             if (array[mid] == value) {
